                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module W5500
                                      6 	.optsdcc -mmcs51 --model-medium
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl __spigeneric_frame_end
                                     12 	.globl __spigeneric_frame_start
                                     13 	.globl __spigeneric_spit_byte
                                     14 	.globl _CY
                                     15 	.globl _AC
                                     16 	.globl _F0
                                     17 	.globl _RS1
                                     18 	.globl _RS0
                                     19 	.globl _OV
                                     20 	.globl _F1
                                     21 	.globl _P
                                     22 	.globl _PS
                                     23 	.globl _PT1
                                     24 	.globl _PX1
                                     25 	.globl _PT0
                                     26 	.globl _PX0
                                     27 	.globl _RD
                                     28 	.globl _WR
                                     29 	.globl _T1
                                     30 	.globl _T0
                                     31 	.globl _INT1
                                     32 	.globl _INT0
                                     33 	.globl _TXD
                                     34 	.globl _RXD
                                     35 	.globl _P3_7
                                     36 	.globl _P3_6
                                     37 	.globl _P3_5
                                     38 	.globl _P3_4
                                     39 	.globl _P3_3
                                     40 	.globl _P3_2
                                     41 	.globl _P3_1
                                     42 	.globl _P3_0
                                     43 	.globl _EA
                                     44 	.globl _ES
                                     45 	.globl _ET1
                                     46 	.globl _EX1
                                     47 	.globl _ET0
                                     48 	.globl _EX0
                                     49 	.globl _P2_7
                                     50 	.globl _P2_6
                                     51 	.globl _P2_5
                                     52 	.globl _P2_4
                                     53 	.globl _P2_3
                                     54 	.globl _P2_2
                                     55 	.globl _P2_1
                                     56 	.globl _P2_0
                                     57 	.globl _SM0
                                     58 	.globl _SM1
                                     59 	.globl _SM2
                                     60 	.globl _REN
                                     61 	.globl _TB8
                                     62 	.globl _RB8
                                     63 	.globl _TI
                                     64 	.globl _RI
                                     65 	.globl _P1_7
                                     66 	.globl _P1_6
                                     67 	.globl _P1_5
                                     68 	.globl _P1_4
                                     69 	.globl _P1_3
                                     70 	.globl _P1_2
                                     71 	.globl _P1_1
                                     72 	.globl _P1_0
                                     73 	.globl _TF1
                                     74 	.globl _TR1
                                     75 	.globl _TF0
                                     76 	.globl _TR0
                                     77 	.globl _IE1
                                     78 	.globl _IT1
                                     79 	.globl _IE0
                                     80 	.globl _IT0
                                     81 	.globl _P0_7
                                     82 	.globl _P0_6
                                     83 	.globl _P0_5
                                     84 	.globl _P0_4
                                     85 	.globl _P0_3
                                     86 	.globl _P0_2
                                     87 	.globl _P0_1
                                     88 	.globl _P0_0
                                     89 	.globl _B
                                     90 	.globl _ACC
                                     91 	.globl _PSW
                                     92 	.globl _IP
                                     93 	.globl _P3
                                     94 	.globl _IE
                                     95 	.globl _P2
                                     96 	.globl _SBUF
                                     97 	.globl _SCON
                                     98 	.globl _P1
                                     99 	.globl _TH1
                                    100 	.globl _TH0
                                    101 	.globl _TL1
                                    102 	.globl _TL0
                                    103 	.globl _TMOD
                                    104 	.globl _TCON
                                    105 	.globl _PCON
                                    106 	.globl _DPH
                                    107 	.globl _DPL
                                    108 	.globl _SP
                                    109 	.globl _P0
                                    110 	.globl __w5500_write_PARM_4
                                    111 	.globl __w5500_write_PARM_3
                                    112 	.globl __w5500_write_PARM_2
                                    113 	.globl __w5500_read_PARM_4
                                    114 	.globl __w5500_read_PARM_3
                                    115 	.globl __w5500_read_PARM_2
                                    116 	.globl __w5500_writeto_PARM_3
                                    117 	.globl __w5500_writeto_PARM_2
                                    118 	.globl __w5500_set_destinationip_PARM_2
                                    119 	.globl __w5500_set_remoteport_PARM_2
                                    120 	.globl __w5500_set_sourceport_PARM_2
                                    121 	.globl __w5500_input_buffer
                                    122 	.globl _small_buffer
                                    123 	.globl __w5500_open
                                    124 	.globl __w5500_reset
                                    125 	.globl __w5500_close
                                    126 	.globl __w5500_discon
                                    127 	.globl __w5500_set_udp
                                    128 	.globl __w5500_set_tcp
                                    129 	.globl __w5500_get_IMR
                                    130 	.globl __w5500_get_SIR
                                    131 	.globl __w5500_set_IMR
                                    132 	.globl __w5500_get_SIMR
                                    133 	.globl __w5500_clear_SNIR
                                    134 	.globl __w5500_get_SNIR
                                    135 	.globl __w5500_get_status
                                    136 	.globl __w5500_listen
                                    137 	.globl __w5500_set_sourceport
                                    138 	.globl __w5500_set_remoteport
                                    139 	.globl __w5500_set_destinationip
                                    140 	.globl __w5500_writeto
                                    141 	.globl __w5500_bytesinbuffer
                                    142 	.globl __w5500_readchar
                                    143 	.globl __w5500_send
                                    144 	.globl __w5500_get_version
                                    145 	.globl __w5500_get_phyconfig
                                    146 	.globl __w5500_read
                                    147 	.globl __w5500_write
                                    148 ;--------------------------------------------------------
                                    149 ; special function registers
                                    150 ;--------------------------------------------------------
                                    151 	.area RSEG    (ABS,DATA)
      000000                        152 	.org 0x0000
                           000080   153 _P0	=	0x0080
                           000081   154 _SP	=	0x0081
                           000082   155 _DPL	=	0x0082
                           000083   156 _DPH	=	0x0083
                           000087   157 _PCON	=	0x0087
                           000088   158 _TCON	=	0x0088
                           000089   159 _TMOD	=	0x0089
                           00008A   160 _TL0	=	0x008a
                           00008B   161 _TL1	=	0x008b
                           00008C   162 _TH0	=	0x008c
                           00008D   163 _TH1	=	0x008d
                           000090   164 _P1	=	0x0090
                           000098   165 _SCON	=	0x0098
                           000099   166 _SBUF	=	0x0099
                           0000A0   167 _P2	=	0x00a0
                           0000A8   168 _IE	=	0x00a8
                           0000B0   169 _P3	=	0x00b0
                           0000B8   170 _IP	=	0x00b8
                           0000D0   171 _PSW	=	0x00d0
                           0000E0   172 _ACC	=	0x00e0
                           0000F0   173 _B	=	0x00f0
                                    174 ;--------------------------------------------------------
                                    175 ; special function bits
                                    176 ;--------------------------------------------------------
                                    177 	.area RSEG    (ABS,DATA)
      000000                        178 	.org 0x0000
                           000080   179 _P0_0	=	0x0080
                           000081   180 _P0_1	=	0x0081
                           000082   181 _P0_2	=	0x0082
                           000083   182 _P0_3	=	0x0083
                           000084   183 _P0_4	=	0x0084
                           000085   184 _P0_5	=	0x0085
                           000086   185 _P0_6	=	0x0086
                           000087   186 _P0_7	=	0x0087
                           000088   187 _IT0	=	0x0088
                           000089   188 _IE0	=	0x0089
                           00008A   189 _IT1	=	0x008a
                           00008B   190 _IE1	=	0x008b
                           00008C   191 _TR0	=	0x008c
                           00008D   192 _TF0	=	0x008d
                           00008E   193 _TR1	=	0x008e
                           00008F   194 _TF1	=	0x008f
                           000090   195 _P1_0	=	0x0090
                           000091   196 _P1_1	=	0x0091
                           000092   197 _P1_2	=	0x0092
                           000093   198 _P1_3	=	0x0093
                           000094   199 _P1_4	=	0x0094
                           000095   200 _P1_5	=	0x0095
                           000096   201 _P1_6	=	0x0096
                           000097   202 _P1_7	=	0x0097
                           000098   203 _RI	=	0x0098
                           000099   204 _TI	=	0x0099
                           00009A   205 _RB8	=	0x009a
                           00009B   206 _TB8	=	0x009b
                           00009C   207 _REN	=	0x009c
                           00009D   208 _SM2	=	0x009d
                           00009E   209 _SM1	=	0x009e
                           00009F   210 _SM0	=	0x009f
                           0000A0   211 _P2_0	=	0x00a0
                           0000A1   212 _P2_1	=	0x00a1
                           0000A2   213 _P2_2	=	0x00a2
                           0000A3   214 _P2_3	=	0x00a3
                           0000A4   215 _P2_4	=	0x00a4
                           0000A5   216 _P2_5	=	0x00a5
                           0000A6   217 _P2_6	=	0x00a6
                           0000A7   218 _P2_7	=	0x00a7
                           0000A8   219 _EX0	=	0x00a8
                           0000A9   220 _ET0	=	0x00a9
                           0000AA   221 _EX1	=	0x00aa
                           0000AB   222 _ET1	=	0x00ab
                           0000AC   223 _ES	=	0x00ac
                           0000AF   224 _EA	=	0x00af
                           0000B0   225 _P3_0	=	0x00b0
                           0000B1   226 _P3_1	=	0x00b1
                           0000B2   227 _P3_2	=	0x00b2
                           0000B3   228 _P3_3	=	0x00b3
                           0000B4   229 _P3_4	=	0x00b4
                           0000B5   230 _P3_5	=	0x00b5
                           0000B6   231 _P3_6	=	0x00b6
                           0000B7   232 _P3_7	=	0x00b7
                           0000B0   233 _RXD	=	0x00b0
                           0000B1   234 _TXD	=	0x00b1
                           0000B2   235 _INT0	=	0x00b2
                           0000B3   236 _INT1	=	0x00b3
                           0000B4   237 _T0	=	0x00b4
                           0000B5   238 _T1	=	0x00b5
                           0000B6   239 _WR	=	0x00b6
                           0000B7   240 _RD	=	0x00b7
                           0000B8   241 _PX0	=	0x00b8
                           0000B9   242 _PT0	=	0x00b9
                           0000BA   243 _PX1	=	0x00ba
                           0000BB   244 _PT1	=	0x00bb
                           0000BC   245 _PS	=	0x00bc
                           0000D0   246 _P	=	0x00d0
                           0000D1   247 _F1	=	0x00d1
                           0000D2   248 _OV	=	0x00d2
                           0000D3   249 _RS0	=	0x00d3
                           0000D4   250 _RS1	=	0x00d4
                           0000D5   251 _F0	=	0x00d5
                           0000D6   252 _AC	=	0x00d6
                           0000D7   253 _CY	=	0x00d7
                                    254 ;--------------------------------------------------------
                                    255 ; overlayable register banks
                                    256 ;--------------------------------------------------------
                                    257 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        258 	.ds 8
                                    259 ;--------------------------------------------------------
                                    260 ; internal ram data
                                    261 ;--------------------------------------------------------
                                    262 	.area DSEG    (DATA)
      000000                        263 __w5500_read_sloc0_1_0:
      000000                        264 	.ds 2
      000002                        265 __w5500_write_sloc0_1_0:
      000002                        266 	.ds 2
                                    267 ;--------------------------------------------------------
                                    268 ; overlayable items in internal ram 
                                    269 ;--------------------------------------------------------
                                    270 ;--------------------------------------------------------
                                    271 ; indirectly addressable internal ram data
                                    272 ;--------------------------------------------------------
                                    273 	.area ISEG    (DATA)
                                    274 ;--------------------------------------------------------
                                    275 ; absolute internal ram data
                                    276 ;--------------------------------------------------------
                                    277 	.area IABS    (ABS,DATA)
                                    278 	.area IABS    (ABS,DATA)
                                    279 ;--------------------------------------------------------
                                    280 ; bit data
                                    281 ;--------------------------------------------------------
                                    282 	.area BSEG    (BIT)
                                    283 ;--------------------------------------------------------
                                    284 ; paged external ram data
                                    285 ;--------------------------------------------------------
                                    286 	.area PSEG    (PAG,XDATA)
      000000                        287 _small_buffer::
      000000                        288 	.ds 2
      000002                        289 __w5500_input_buffer::
      000002                        290 	.ds 33
      000023                        291 __w5500_set_sourceport_PARM_2:
      000023                        292 	.ds 2
      000025                        293 __w5500_set_remoteport_PARM_2:
      000025                        294 	.ds 2
      000027                        295 __w5500_set_destinationip_PARM_2:
      000027                        296 	.ds 3
      00002A                        297 __w5500_writeto_PARM_2:
      00002A                        298 	.ds 3
      00002D                        299 __w5500_writeto_PARM_3:
      00002D                        300 	.ds 1
      00002E                        301 __w5500_readchar_val_65536_61:
      00002E                        302 	.ds 1
      00002F                        303 __w5500_read_PARM_2:
      00002F                        304 	.ds 1
      000030                        305 __w5500_read_PARM_3:
      000030                        306 	.ds 3
      000033                        307 __w5500_read_PARM_4:
      000033                        308 	.ds 2
      000035                        309 __w5500_write_PARM_2:
      000035                        310 	.ds 1
      000036                        311 __w5500_write_PARM_3:
      000036                        312 	.ds 3
      000039                        313 __w5500_write_PARM_4:
      000039                        314 	.ds 2
                                    315 ;--------------------------------------------------------
                                    316 ; external ram data
                                    317 ;--------------------------------------------------------
                                    318 	.area XSEG    (XDATA)
                                    319 ;--------------------------------------------------------
                                    320 ; absolute external ram data
                                    321 ;--------------------------------------------------------
                                    322 	.area XABS    (ABS,XDATA)
                                    323 ;--------------------------------------------------------
                                    324 ; external initialized ram data
                                    325 ;--------------------------------------------------------
                                    326 	.area XISEG   (XDATA)
                                    327 	.area HOME    (CODE)
                                    328 	.area GSINIT0 (CODE)
                                    329 	.area GSINIT1 (CODE)
                                    330 	.area GSINIT2 (CODE)
                                    331 	.area GSINIT3 (CODE)
                                    332 	.area GSINIT4 (CODE)
                                    333 	.area GSINIT5 (CODE)
                                    334 	.area GSINIT  (CODE)
                                    335 	.area GSFINAL (CODE)
                                    336 	.area CSEG    (CODE)
                                    337 ;--------------------------------------------------------
                                    338 ; global & static initialisations
                                    339 ;--------------------------------------------------------
                                    340 	.area HOME    (CODE)
                                    341 	.area GSINIT  (CODE)
                                    342 	.area GSFINAL (CODE)
                                    343 	.area GSINIT  (CODE)
                                    344 ;--------------------------------------------------------
                                    345 ; Home
                                    346 ;--------------------------------------------------------
                                    347 	.area HOME    (CODE)
                                    348 	.area HOME    (CODE)
                                    349 ;--------------------------------------------------------
                                    350 ; code
                                    351 ;--------------------------------------------------------
                                    352 	.area CSEG    (CODE)
                                    353 ;------------------------------------------------------------
                                    354 ;Allocation info for local variables in function '_w5500_open'
                                    355 ;------------------------------------------------------------
                                    356 ;	W5500.c:6: void _w5500_open(unsigned char socket) {
                                    357 ;	-----------------------------------------
                                    358 ;	 function _w5500_open
                                    359 ;	-----------------------------------------
      000000                        360 __w5500_open:
                           000007   361 	ar7 = 0x07
                           000006   362 	ar6 = 0x06
                           000005   363 	ar5 = 0x05
                           000004   364 	ar4 = 0x04
                           000003   365 	ar3 = 0x03
                           000002   366 	ar2 = 0x02
                           000001   367 	ar1 = 0x01
                           000000   368 	ar0 = 0x00
      000000 AF 82            [24]  369 	mov	r7,dpl
                                    370 ;	W5500.c:7: small_buffer[0] = 0x1;
      000002 78r00            [12]  371 	mov	r0,#_small_buffer
      000004 74 01            [12]  372 	mov	a,#0x01
      000006 F2               [24]  373 	movx	@r0,a
                                    374 ;	W5500.c:8: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      000007 EF               [12]  375 	mov	a,r7
      000008 2F               [12]  376 	add	a,r7
      000009 25 E0            [12]  377 	add	a,acc
      00000B 78r35            [12]  378 	mov	r0,#__w5500_write_PARM_2
      00000D 04               [12]  379 	inc	a
      00000E F2               [24]  380 	movx	@r0,a
      00000F 78r36            [12]  381 	mov	r0,#__w5500_write_PARM_3
      000011 74r00            [12]  382 	mov	a,#_small_buffer
      000013 F2               [24]  383 	movx	@r0,a
      000014 08               [12]  384 	inc	r0
      000015 E4               [12]  385 	clr	a
      000016 F2               [24]  386 	movx	@r0,a
      000017 08               [12]  387 	inc	r0
      000018 74 60            [12]  388 	mov	a,#0x60
      00001A F2               [24]  389 	movx	@r0,a
      00001B 78r39            [12]  390 	mov	r0,#__w5500_write_PARM_4
      00001D 74 01            [12]  391 	mov	a,#0x01
      00001F F2               [24]  392 	movx	@r0,a
      000020 08               [12]  393 	inc	r0
      000021 E4               [12]  394 	clr	a
      000022 F2               [24]  395 	movx	@r0,a
      000023 90 00 01         [24]  396 	mov	dptr,#0x0001
                                    397 ;	W5500.c:9: }
      000026 02r05r9C         [24]  398 	ljmp	__w5500_write
                                    399 ;------------------------------------------------------------
                                    400 ;Allocation info for local variables in function '_w5500_reset'
                                    401 ;------------------------------------------------------------
                                    402 ;	W5500.c:11: void _w5500_reset() {
                                    403 ;	-----------------------------------------
                                    404 ;	 function _w5500_reset
                                    405 ;	-----------------------------------------
      000029                        406 __w5500_reset:
                                    407 ;	W5500.c:12: small_buffer[0] = 0x80;
      000029 78r00            [12]  408 	mov	r0,#_small_buffer
      00002B 74 80            [12]  409 	mov	a,#0x80
      00002D F2               [24]  410 	movx	@r0,a
                                    411 ;	W5500.c:13: _w5500_write(0x00, 0x00, small_buffer, 1);
      00002E 78r36            [12]  412 	mov	r0,#__w5500_write_PARM_3
      000030 74r00            [12]  413 	mov	a,#_small_buffer
      000032 F2               [24]  414 	movx	@r0,a
      000033 08               [12]  415 	inc	r0
      000034 E4               [12]  416 	clr	a
      000035 F2               [24]  417 	movx	@r0,a
      000036 08               [12]  418 	inc	r0
      000037 74 60            [12]  419 	mov	a,#0x60
      000039 F2               [24]  420 	movx	@r0,a
      00003A 78r35            [12]  421 	mov	r0,#__w5500_write_PARM_2
      00003C E4               [12]  422 	clr	a
      00003D F2               [24]  423 	movx	@r0,a
      00003E 78r39            [12]  424 	mov	r0,#__w5500_write_PARM_4
      000040 04               [12]  425 	inc	a
      000041 F2               [24]  426 	movx	@r0,a
      000042 08               [12]  427 	inc	r0
      000043 E4               [12]  428 	clr	a
      000044 F2               [24]  429 	movx	@r0,a
      000045 90 00 00         [24]  430 	mov	dptr,#0x0000
                                    431 ;	W5500.c:14: }
      000048 02r05r9C         [24]  432 	ljmp	__w5500_write
                                    433 ;------------------------------------------------------------
                                    434 ;Allocation info for local variables in function '_w5500_close'
                                    435 ;------------------------------------------------------------
                                    436 ;	W5500.c:16: void _w5500_close(unsigned char socket) {
                                    437 ;	-----------------------------------------
                                    438 ;	 function _w5500_close
                                    439 ;	-----------------------------------------
      00004B                        440 __w5500_close:
      00004B AF 82            [24]  441 	mov	r7,dpl
                                    442 ;	W5500.c:17: small_buffer[0] = 0x10;
      00004D 78r00            [12]  443 	mov	r0,#_small_buffer
      00004F 74 10            [12]  444 	mov	a,#0x10
      000051 F2               [24]  445 	movx	@r0,a
                                    446 ;	W5500.c:18: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      000052 EF               [12]  447 	mov	a,r7
      000053 2F               [12]  448 	add	a,r7
      000054 25 E0            [12]  449 	add	a,acc
      000056 78r35            [12]  450 	mov	r0,#__w5500_write_PARM_2
      000058 04               [12]  451 	inc	a
      000059 F2               [24]  452 	movx	@r0,a
      00005A 78r36            [12]  453 	mov	r0,#__w5500_write_PARM_3
      00005C 74r00            [12]  454 	mov	a,#_small_buffer
      00005E F2               [24]  455 	movx	@r0,a
      00005F 08               [12]  456 	inc	r0
      000060 E4               [12]  457 	clr	a
      000061 F2               [24]  458 	movx	@r0,a
      000062 08               [12]  459 	inc	r0
      000063 74 60            [12]  460 	mov	a,#0x60
      000065 F2               [24]  461 	movx	@r0,a
      000066 78r39            [12]  462 	mov	r0,#__w5500_write_PARM_4
      000068 74 01            [12]  463 	mov	a,#0x01
      00006A F2               [24]  464 	movx	@r0,a
      00006B 08               [12]  465 	inc	r0
      00006C E4               [12]  466 	clr	a
      00006D F2               [24]  467 	movx	@r0,a
      00006E 90 00 01         [24]  468 	mov	dptr,#0x0001
                                    469 ;	W5500.c:19: }
      000071 02r05r9C         [24]  470 	ljmp	__w5500_write
                                    471 ;------------------------------------------------------------
                                    472 ;Allocation info for local variables in function '_w5500_discon'
                                    473 ;------------------------------------------------------------
                                    474 ;	W5500.c:21: void _w5500_discon(unsigned char socket) {
                                    475 ;	-----------------------------------------
                                    476 ;	 function _w5500_discon
                                    477 ;	-----------------------------------------
      000074                        478 __w5500_discon:
      000074 AF 82            [24]  479 	mov	r7,dpl
                                    480 ;	W5500.c:22: small_buffer[0] = 0x08;
      000076 78r00            [12]  481 	mov	r0,#_small_buffer
      000078 74 08            [12]  482 	mov	a,#0x08
      00007A F2               [24]  483 	movx	@r0,a
                                    484 ;	W5500.c:23: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      00007B EF               [12]  485 	mov	a,r7
      00007C 2F               [12]  486 	add	a,r7
      00007D 25 E0            [12]  487 	add	a,acc
      00007F 78r35            [12]  488 	mov	r0,#__w5500_write_PARM_2
      000081 04               [12]  489 	inc	a
      000082 F2               [24]  490 	movx	@r0,a
      000083 78r36            [12]  491 	mov	r0,#__w5500_write_PARM_3
      000085 74r00            [12]  492 	mov	a,#_small_buffer
      000087 F2               [24]  493 	movx	@r0,a
      000088 08               [12]  494 	inc	r0
      000089 E4               [12]  495 	clr	a
      00008A F2               [24]  496 	movx	@r0,a
      00008B 08               [12]  497 	inc	r0
      00008C 74 60            [12]  498 	mov	a,#0x60
      00008E F2               [24]  499 	movx	@r0,a
      00008F 78r39            [12]  500 	mov	r0,#__w5500_write_PARM_4
      000091 74 01            [12]  501 	mov	a,#0x01
      000093 F2               [24]  502 	movx	@r0,a
      000094 08               [12]  503 	inc	r0
      000095 E4               [12]  504 	clr	a
      000096 F2               [24]  505 	movx	@r0,a
      000097 90 00 01         [24]  506 	mov	dptr,#0x0001
                                    507 ;	W5500.c:24: }
      00009A 02r05r9C         [24]  508 	ljmp	__w5500_write
                                    509 ;------------------------------------------------------------
                                    510 ;Allocation info for local variables in function '_w5500_set_udp'
                                    511 ;------------------------------------------------------------
                                    512 ;	W5500.c:26: void _w5500_set_udp(unsigned char socket) {
                                    513 ;	-----------------------------------------
                                    514 ;	 function _w5500_set_udp
                                    515 ;	-----------------------------------------
      00009D                        516 __w5500_set_udp:
                                    517 ;	W5500.c:27: _w5500_read(0x00, (socket * 4) + 1, small_buffer, 1);
      00009D E5 82            [12]  518 	mov	a,dpl
      00009F 25 82            [12]  519 	add	a,dpl
      0000A1 25 E0            [12]  520 	add	a,acc
      0000A3 FF               [12]  521 	mov	r7,a
      0000A4 0F               [12]  522 	inc	r7
      0000A5 78r30            [12]  523 	mov	r0,#__w5500_read_PARM_3
      0000A7 74r00            [12]  524 	mov	a,#_small_buffer
      0000A9 F2               [24]  525 	movx	@r0,a
      0000AA 08               [12]  526 	inc	r0
      0000AB E4               [12]  527 	clr	a
      0000AC F2               [24]  528 	movx	@r0,a
      0000AD 08               [12]  529 	inc	r0
      0000AE 74 60            [12]  530 	mov	a,#0x60
      0000B0 F2               [24]  531 	movx	@r0,a
      0000B1 78r2F            [12]  532 	mov	r0,#__w5500_read_PARM_2
      0000B3 EF               [12]  533 	mov	a,r7
      0000B4 F2               [24]  534 	movx	@r0,a
      0000B5 78r33            [12]  535 	mov	r0,#__w5500_read_PARM_4
      0000B7 74 01            [12]  536 	mov	a,#0x01
      0000B9 F2               [24]  537 	movx	@r0,a
      0000BA 08               [12]  538 	inc	r0
      0000BB E4               [12]  539 	clr	a
      0000BC F2               [24]  540 	movx	@r0,a
      0000BD 90 00 00         [24]  541 	mov	dptr,#0x0000
      0000C0 C0 07            [24]  542 	push	ar7
      0000C2 12r05r24         [24]  543 	lcall	__w5500_read
      0000C5 D0 07            [24]  544 	pop	ar7
                                    545 ;	W5500.c:28: small_buffer[0] &= 0xF0;
      0000C7 78r00            [12]  546 	mov	r0,#_small_buffer
      0000C9 E2               [24]  547 	movx	a,@r0
      0000CA FE               [12]  548 	mov	r6,a
      0000CB 53 06 F0         [24]  549 	anl	ar6,#0xf0
      0000CE 78r00            [12]  550 	mov	r0,#_small_buffer
      0000D0 EE               [12]  551 	mov	a,r6
      0000D1 F2               [24]  552 	movx	@r0,a
                                    553 ;	W5500.c:29: small_buffer[0] |= PROTOCOL_UDP;
      0000D2 74 02            [12]  554 	mov	a,#0x02
      0000D4 4E               [12]  555 	orl	a,r6
      0000D5 78r00            [12]  556 	mov	r0,#_small_buffer
      0000D7 F2               [24]  557 	movx	@r0,a
                                    558 ;	W5500.c:30: _w5500_write(0x00, (socket * 4) + 1, small_buffer, 1);
      0000D8 78r36            [12]  559 	mov	r0,#__w5500_write_PARM_3
      0000DA 74r00            [12]  560 	mov	a,#_small_buffer
      0000DC F2               [24]  561 	movx	@r0,a
      0000DD 08               [12]  562 	inc	r0
      0000DE E4               [12]  563 	clr	a
      0000DF F2               [24]  564 	movx	@r0,a
      0000E0 08               [12]  565 	inc	r0
      0000E1 74 60            [12]  566 	mov	a,#0x60
      0000E3 F2               [24]  567 	movx	@r0,a
      0000E4 78r35            [12]  568 	mov	r0,#__w5500_write_PARM_2
      0000E6 EF               [12]  569 	mov	a,r7
      0000E7 F2               [24]  570 	movx	@r0,a
      0000E8 78r39            [12]  571 	mov	r0,#__w5500_write_PARM_4
      0000EA 74 01            [12]  572 	mov	a,#0x01
      0000EC F2               [24]  573 	movx	@r0,a
      0000ED 08               [12]  574 	inc	r0
      0000EE E4               [12]  575 	clr	a
      0000EF F2               [24]  576 	movx	@r0,a
      0000F0 90 00 00         [24]  577 	mov	dptr,#0x0000
                                    578 ;	W5500.c:31: }
      0000F3 02r05r9C         [24]  579 	ljmp	__w5500_write
                                    580 ;------------------------------------------------------------
                                    581 ;Allocation info for local variables in function '_w5500_set_tcp'
                                    582 ;------------------------------------------------------------
                                    583 ;	W5500.c:33: void _w5500_set_tcp(unsigned char socket) {
                                    584 ;	-----------------------------------------
                                    585 ;	 function _w5500_set_tcp
                                    586 ;	-----------------------------------------
      0000F6                        587 __w5500_set_tcp:
                                    588 ;	W5500.c:34: _w5500_read(0x00, (socket * 4) + 1, small_buffer, 1);
      0000F6 E5 82            [12]  589 	mov	a,dpl
      0000F8 25 82            [12]  590 	add	a,dpl
      0000FA 25 E0            [12]  591 	add	a,acc
      0000FC FF               [12]  592 	mov	r7,a
      0000FD 0F               [12]  593 	inc	r7
      0000FE 78r30            [12]  594 	mov	r0,#__w5500_read_PARM_3
      000100 74r00            [12]  595 	mov	a,#_small_buffer
      000102 F2               [24]  596 	movx	@r0,a
      000103 08               [12]  597 	inc	r0
      000104 E4               [12]  598 	clr	a
      000105 F2               [24]  599 	movx	@r0,a
      000106 08               [12]  600 	inc	r0
      000107 74 60            [12]  601 	mov	a,#0x60
      000109 F2               [24]  602 	movx	@r0,a
      00010A 78r2F            [12]  603 	mov	r0,#__w5500_read_PARM_2
      00010C EF               [12]  604 	mov	a,r7
      00010D F2               [24]  605 	movx	@r0,a
      00010E 78r33            [12]  606 	mov	r0,#__w5500_read_PARM_4
      000110 74 01            [12]  607 	mov	a,#0x01
      000112 F2               [24]  608 	movx	@r0,a
      000113 08               [12]  609 	inc	r0
      000114 E4               [12]  610 	clr	a
      000115 F2               [24]  611 	movx	@r0,a
      000116 90 00 00         [24]  612 	mov	dptr,#0x0000
      000119 C0 07            [24]  613 	push	ar7
      00011B 12r05r24         [24]  614 	lcall	__w5500_read
      00011E D0 07            [24]  615 	pop	ar7
                                    616 ;	W5500.c:35: small_buffer[0] &= 0xF0;
      000120 78r00            [12]  617 	mov	r0,#_small_buffer
      000122 E2               [24]  618 	movx	a,@r0
      000123 FE               [12]  619 	mov	r6,a
      000124 53 06 F0         [24]  620 	anl	ar6,#0xf0
      000127 78r00            [12]  621 	mov	r0,#_small_buffer
      000129 EE               [12]  622 	mov	a,r6
      00012A F2               [24]  623 	movx	@r0,a
                                    624 ;	W5500.c:36: small_buffer[0] |= PROTOCOL_TCP;
      00012B 74 01            [12]  625 	mov	a,#0x01
      00012D 4E               [12]  626 	orl	a,r6
      00012E 78r00            [12]  627 	mov	r0,#_small_buffer
      000130 F2               [24]  628 	movx	@r0,a
                                    629 ;	W5500.c:37: _w5500_write(0x00, (socket * 4) + 1, small_buffer, 1);
      000131 78r36            [12]  630 	mov	r0,#__w5500_write_PARM_3
      000133 74r00            [12]  631 	mov	a,#_small_buffer
      000135 F2               [24]  632 	movx	@r0,a
      000136 08               [12]  633 	inc	r0
      000137 E4               [12]  634 	clr	a
      000138 F2               [24]  635 	movx	@r0,a
      000139 08               [12]  636 	inc	r0
      00013A 74 60            [12]  637 	mov	a,#0x60
      00013C F2               [24]  638 	movx	@r0,a
      00013D 78r35            [12]  639 	mov	r0,#__w5500_write_PARM_2
      00013F EF               [12]  640 	mov	a,r7
      000140 F2               [24]  641 	movx	@r0,a
      000141 78r39            [12]  642 	mov	r0,#__w5500_write_PARM_4
      000143 74 01            [12]  643 	mov	a,#0x01
      000145 F2               [24]  644 	movx	@r0,a
      000146 08               [12]  645 	inc	r0
      000147 E4               [12]  646 	clr	a
      000148 F2               [24]  647 	movx	@r0,a
      000149 90 00 00         [24]  648 	mov	dptr,#0x0000
                                    649 ;	W5500.c:38: }
      00014C 02r05r9C         [24]  650 	ljmp	__w5500_write
                                    651 ;------------------------------------------------------------
                                    652 ;Allocation info for local variables in function '_w5500_get_IMR'
                                    653 ;------------------------------------------------------------
                                    654 ;	W5500.c:41: unsigned char _w5500_get_IMR(unsigned char socket) {
                                    655 ;	-----------------------------------------
                                    656 ;	 function _w5500_get_IMR
                                    657 ;	-----------------------------------------
      00014F                        658 __w5500_get_IMR:
                                    659 ;	W5500.c:42: _w5500_read(SOCKETN_IMR, (socket * 4) + 1, small_buffer, 1);
      00014F E5 82            [12]  660 	mov	a,dpl
      000151 25 82            [12]  661 	add	a,dpl
      000153 25 E0            [12]  662 	add	a,acc
      000155 78r2F            [12]  663 	mov	r0,#__w5500_read_PARM_2
      000157 04               [12]  664 	inc	a
      000158 F2               [24]  665 	movx	@r0,a
      000159 78r30            [12]  666 	mov	r0,#__w5500_read_PARM_3
      00015B 74r00            [12]  667 	mov	a,#_small_buffer
      00015D F2               [24]  668 	movx	@r0,a
      00015E 08               [12]  669 	inc	r0
      00015F E4               [12]  670 	clr	a
      000160 F2               [24]  671 	movx	@r0,a
      000161 08               [12]  672 	inc	r0
      000162 74 60            [12]  673 	mov	a,#0x60
      000164 F2               [24]  674 	movx	@r0,a
      000165 78r33            [12]  675 	mov	r0,#__w5500_read_PARM_4
      000167 74 01            [12]  676 	mov	a,#0x01
      000169 F2               [24]  677 	movx	@r0,a
      00016A 08               [12]  678 	inc	r0
      00016B E4               [12]  679 	clr	a
      00016C F2               [24]  680 	movx	@r0,a
      00016D 90 00 2C         [24]  681 	mov	dptr,#0x002c
      000170 12r05r24         [24]  682 	lcall	__w5500_read
                                    683 ;	W5500.c:43: return (small_buffer[0]);
      000173 78r00            [12]  684 	mov	r0,#_small_buffer
      000175 E2               [24]  685 	movx	a,@r0
      000176 F5 82            [12]  686 	mov	dpl,a
                                    687 ;	W5500.c:44: }
      000178 22               [24]  688 	ret
                                    689 ;------------------------------------------------------------
                                    690 ;Allocation info for local variables in function '_w5500_get_SIR'
                                    691 ;------------------------------------------------------------
                                    692 ;	W5500.c:46: unsigned char _w5500_get_SIR() {
                                    693 ;	-----------------------------------------
                                    694 ;	 function _w5500_get_SIR
                                    695 ;	-----------------------------------------
      000179                        696 __w5500_get_SIR:
                                    697 ;	W5500.c:47: _w5500_read(0x0017, 0x00, small_buffer, 1);
      000179 78r30            [12]  698 	mov	r0,#__w5500_read_PARM_3
      00017B 74r00            [12]  699 	mov	a,#_small_buffer
      00017D F2               [24]  700 	movx	@r0,a
      00017E 08               [12]  701 	inc	r0
      00017F E4               [12]  702 	clr	a
      000180 F2               [24]  703 	movx	@r0,a
      000181 08               [12]  704 	inc	r0
      000182 74 60            [12]  705 	mov	a,#0x60
      000184 F2               [24]  706 	movx	@r0,a
      000185 78r2F            [12]  707 	mov	r0,#__w5500_read_PARM_2
      000187 E4               [12]  708 	clr	a
      000188 F2               [24]  709 	movx	@r0,a
      000189 78r33            [12]  710 	mov	r0,#__w5500_read_PARM_4
      00018B 04               [12]  711 	inc	a
      00018C F2               [24]  712 	movx	@r0,a
      00018D 08               [12]  713 	inc	r0
      00018E E4               [12]  714 	clr	a
      00018F F2               [24]  715 	movx	@r0,a
      000190 90 00 17         [24]  716 	mov	dptr,#0x0017
      000193 12r05r24         [24]  717 	lcall	__w5500_read
                                    718 ;	W5500.c:48: return (small_buffer[0]);
      000196 78r00            [12]  719 	mov	r0,#_small_buffer
      000198 E2               [24]  720 	movx	a,@r0
      000199 F5 82            [12]  721 	mov	dpl,a
                                    722 ;	W5500.c:49: }
      00019B 22               [24]  723 	ret
                                    724 ;------------------------------------------------------------
                                    725 ;Allocation info for local variables in function '_w5500_set_IMR'
                                    726 ;------------------------------------------------------------
                                    727 ;	W5500.c:52: void _w5500_set_IMR(unsigned char socket) {
                                    728 ;	-----------------------------------------
                                    729 ;	 function _w5500_set_IMR
                                    730 ;	-----------------------------------------
      00019C                        731 __w5500_set_IMR:
      00019C AF 82            [24]  732 	mov	r7,dpl
                                    733 ;	W5500.c:53: small_buffer[0] = 0x04;
      00019E 78r00            [12]  734 	mov	r0,#_small_buffer
      0001A0 74 04            [12]  735 	mov	a,#0x04
      0001A2 F2               [24]  736 	movx	@r0,a
                                    737 ;	W5500.c:54: _w5500_write(SOCKETN_IMR, (socket * 4) + 1, small_buffer, 1);
      0001A3 EF               [12]  738 	mov	a,r7
      0001A4 2F               [12]  739 	add	a,r7
      0001A5 25 E0            [12]  740 	add	a,acc
      0001A7 78r35            [12]  741 	mov	r0,#__w5500_write_PARM_2
      0001A9 04               [12]  742 	inc	a
      0001AA F2               [24]  743 	movx	@r0,a
      0001AB 78r36            [12]  744 	mov	r0,#__w5500_write_PARM_3
      0001AD 74r00            [12]  745 	mov	a,#_small_buffer
      0001AF F2               [24]  746 	movx	@r0,a
      0001B0 08               [12]  747 	inc	r0
      0001B1 E4               [12]  748 	clr	a
      0001B2 F2               [24]  749 	movx	@r0,a
      0001B3 08               [12]  750 	inc	r0
      0001B4 74 60            [12]  751 	mov	a,#0x60
      0001B6 F2               [24]  752 	movx	@r0,a
      0001B7 78r39            [12]  753 	mov	r0,#__w5500_write_PARM_4
      0001B9 74 01            [12]  754 	mov	a,#0x01
      0001BB F2               [24]  755 	movx	@r0,a
      0001BC 08               [12]  756 	inc	r0
      0001BD E4               [12]  757 	clr	a
      0001BE F2               [24]  758 	movx	@r0,a
      0001BF 90 00 2C         [24]  759 	mov	dptr,#0x002c
                                    760 ;	W5500.c:55: }
      0001C2 02r05r9C         [24]  761 	ljmp	__w5500_write
                                    762 ;------------------------------------------------------------
                                    763 ;Allocation info for local variables in function '_w5500_get_SIMR'
                                    764 ;------------------------------------------------------------
                                    765 ;	W5500.c:58: unsigned char _w5500_get_SIMR() {
                                    766 ;	-----------------------------------------
                                    767 ;	 function _w5500_get_SIMR
                                    768 ;	-----------------------------------------
      0001C5                        769 __w5500_get_SIMR:
                                    770 ;	W5500.c:59: _w5500_read(0x0018, 0x00, small_buffer, 1);
      0001C5 78r30            [12]  771 	mov	r0,#__w5500_read_PARM_3
      0001C7 74r00            [12]  772 	mov	a,#_small_buffer
      0001C9 F2               [24]  773 	movx	@r0,a
      0001CA 08               [12]  774 	inc	r0
      0001CB E4               [12]  775 	clr	a
      0001CC F2               [24]  776 	movx	@r0,a
      0001CD 08               [12]  777 	inc	r0
      0001CE 74 60            [12]  778 	mov	a,#0x60
      0001D0 F2               [24]  779 	movx	@r0,a
      0001D1 78r2F            [12]  780 	mov	r0,#__w5500_read_PARM_2
      0001D3 E4               [12]  781 	clr	a
      0001D4 F2               [24]  782 	movx	@r0,a
      0001D5 78r33            [12]  783 	mov	r0,#__w5500_read_PARM_4
      0001D7 04               [12]  784 	inc	a
      0001D8 F2               [24]  785 	movx	@r0,a
      0001D9 08               [12]  786 	inc	r0
      0001DA E4               [12]  787 	clr	a
      0001DB F2               [24]  788 	movx	@r0,a
      0001DC 90 00 18         [24]  789 	mov	dptr,#0x0018
      0001DF 12r05r24         [24]  790 	lcall	__w5500_read
                                    791 ;	W5500.c:60: return (small_buffer[0]);
      0001E2 78r00            [12]  792 	mov	r0,#_small_buffer
      0001E4 E2               [24]  793 	movx	a,@r0
      0001E5 F5 82            [12]  794 	mov	dpl,a
                                    795 ;	W5500.c:61: }
      0001E7 22               [24]  796 	ret
                                    797 ;------------------------------------------------------------
                                    798 ;Allocation info for local variables in function '_w5500_clear_SNIR'
                                    799 ;------------------------------------------------------------
                                    800 ;	W5500.c:63: void _w5500_clear_SNIR(unsigned char socket) {
                                    801 ;	-----------------------------------------
                                    802 ;	 function _w5500_clear_SNIR
                                    803 ;	-----------------------------------------
      0001E8                        804 __w5500_clear_SNIR:
      0001E8 AF 82            [24]  805 	mov	r7,dpl
                                    806 ;	W5500.c:64: small_buffer[0] = 0xFF;
      0001EA 78r00            [12]  807 	mov	r0,#_small_buffer
      0001EC 74 FF            [12]  808 	mov	a,#0xff
      0001EE F2               [24]  809 	movx	@r0,a
                                    810 ;	W5500.c:65: _w5500_write(0x0002, (socket * 4) + 1, small_buffer, 1);
      0001EF EF               [12]  811 	mov	a,r7
      0001F0 2F               [12]  812 	add	a,r7
      0001F1 25 E0            [12]  813 	add	a,acc
      0001F3 78r35            [12]  814 	mov	r0,#__w5500_write_PARM_2
      0001F5 04               [12]  815 	inc	a
      0001F6 F2               [24]  816 	movx	@r0,a
      0001F7 78r36            [12]  817 	mov	r0,#__w5500_write_PARM_3
      0001F9 74r00            [12]  818 	mov	a,#_small_buffer
      0001FB F2               [24]  819 	movx	@r0,a
      0001FC 08               [12]  820 	inc	r0
      0001FD E4               [12]  821 	clr	a
      0001FE F2               [24]  822 	movx	@r0,a
      0001FF 08               [12]  823 	inc	r0
      000200 74 60            [12]  824 	mov	a,#0x60
      000202 F2               [24]  825 	movx	@r0,a
      000203 78r39            [12]  826 	mov	r0,#__w5500_write_PARM_4
      000205 74 01            [12]  827 	mov	a,#0x01
      000207 F2               [24]  828 	movx	@r0,a
      000208 08               [12]  829 	inc	r0
      000209 E4               [12]  830 	clr	a
      00020A F2               [24]  831 	movx	@r0,a
      00020B 90 00 02         [24]  832 	mov	dptr,#0x0002
                                    833 ;	W5500.c:66: }
      00020E 02r05r9C         [24]  834 	ljmp	__w5500_write
                                    835 ;------------------------------------------------------------
                                    836 ;Allocation info for local variables in function '_w5500_get_SNIR'
                                    837 ;------------------------------------------------------------
                                    838 ;	W5500.c:68: unsigned char _w5500_get_SNIR(unsigned char socket) {
                                    839 ;	-----------------------------------------
                                    840 ;	 function _w5500_get_SNIR
                                    841 ;	-----------------------------------------
      000211                        842 __w5500_get_SNIR:
                                    843 ;	W5500.c:69: _w5500_read(0x0002, (socket * 4) + 1, small_buffer, 1);
      000211 E5 82            [12]  844 	mov	a,dpl
      000213 25 82            [12]  845 	add	a,dpl
      000215 25 E0            [12]  846 	add	a,acc
      000217 78r2F            [12]  847 	mov	r0,#__w5500_read_PARM_2
      000219 04               [12]  848 	inc	a
      00021A F2               [24]  849 	movx	@r0,a
      00021B 78r30            [12]  850 	mov	r0,#__w5500_read_PARM_3
      00021D 74r00            [12]  851 	mov	a,#_small_buffer
      00021F F2               [24]  852 	movx	@r0,a
      000220 08               [12]  853 	inc	r0
      000221 E4               [12]  854 	clr	a
      000222 F2               [24]  855 	movx	@r0,a
      000223 08               [12]  856 	inc	r0
      000224 74 60            [12]  857 	mov	a,#0x60
      000226 F2               [24]  858 	movx	@r0,a
      000227 78r33            [12]  859 	mov	r0,#__w5500_read_PARM_4
      000229 74 01            [12]  860 	mov	a,#0x01
      00022B F2               [24]  861 	movx	@r0,a
      00022C 08               [12]  862 	inc	r0
      00022D E4               [12]  863 	clr	a
      00022E F2               [24]  864 	movx	@r0,a
      00022F 90 00 02         [24]  865 	mov	dptr,#0x0002
      000232 12r05r24         [24]  866 	lcall	__w5500_read
                                    867 ;	W5500.c:70: return (small_buffer[0]);
      000235 78r00            [12]  868 	mov	r0,#_small_buffer
      000237 E2               [24]  869 	movx	a,@r0
      000238 F5 82            [12]  870 	mov	dpl,a
                                    871 ;	W5500.c:71: }
      00023A 22               [24]  872 	ret
                                    873 ;------------------------------------------------------------
                                    874 ;Allocation info for local variables in function '_w5500_get_status'
                                    875 ;------------------------------------------------------------
                                    876 ;	W5500.c:74: unsigned char _w5500_get_status(unsigned char socket) {
                                    877 ;	-----------------------------------------
                                    878 ;	 function _w5500_get_status
                                    879 ;	-----------------------------------------
      00023B                        880 __w5500_get_status:
                                    881 ;	W5500.c:75: _w5500_read(0x03, (socket * 4) + 1, small_buffer, 1);
      00023B E5 82            [12]  882 	mov	a,dpl
      00023D 25 82            [12]  883 	add	a,dpl
      00023F 25 E0            [12]  884 	add	a,acc
      000241 78r2F            [12]  885 	mov	r0,#__w5500_read_PARM_2
      000243 04               [12]  886 	inc	a
      000244 F2               [24]  887 	movx	@r0,a
      000245 78r30            [12]  888 	mov	r0,#__w5500_read_PARM_3
      000247 74r00            [12]  889 	mov	a,#_small_buffer
      000249 F2               [24]  890 	movx	@r0,a
      00024A 08               [12]  891 	inc	r0
      00024B E4               [12]  892 	clr	a
      00024C F2               [24]  893 	movx	@r0,a
      00024D 08               [12]  894 	inc	r0
      00024E 74 60            [12]  895 	mov	a,#0x60
      000250 F2               [24]  896 	movx	@r0,a
      000251 78r33            [12]  897 	mov	r0,#__w5500_read_PARM_4
      000253 74 01            [12]  898 	mov	a,#0x01
      000255 F2               [24]  899 	movx	@r0,a
      000256 08               [12]  900 	inc	r0
      000257 E4               [12]  901 	clr	a
      000258 F2               [24]  902 	movx	@r0,a
      000259 90 00 03         [24]  903 	mov	dptr,#0x0003
      00025C 12r05r24         [24]  904 	lcall	__w5500_read
                                    905 ;	W5500.c:76: return small_buffer[0];
      00025F 78r00            [12]  906 	mov	r0,#_small_buffer
      000261 E2               [24]  907 	movx	a,@r0
      000262 F5 82            [12]  908 	mov	dpl,a
                                    909 ;	W5500.c:77: }
      000264 22               [24]  910 	ret
                                    911 ;------------------------------------------------------------
                                    912 ;Allocation info for local variables in function '_w5500_listen'
                                    913 ;------------------------------------------------------------
                                    914 ;	W5500.c:79: void _w5500_listen(unsigned char socket) {
                                    915 ;	-----------------------------------------
                                    916 ;	 function _w5500_listen
                                    917 ;	-----------------------------------------
      000265                        918 __w5500_listen:
      000265 AF 82            [24]  919 	mov	r7,dpl
                                    920 ;	W5500.c:80: small_buffer[0] = 0x02;
      000267 78r00            [12]  921 	mov	r0,#_small_buffer
      000269 74 02            [12]  922 	mov	a,#0x02
      00026B F2               [24]  923 	movx	@r0,a
                                    924 ;	W5500.c:81: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      00026C EF               [12]  925 	mov	a,r7
      00026D 2F               [12]  926 	add	a,r7
      00026E 25 E0            [12]  927 	add	a,acc
      000270 78r35            [12]  928 	mov	r0,#__w5500_write_PARM_2
      000272 04               [12]  929 	inc	a
      000273 F2               [24]  930 	movx	@r0,a
      000274 78r36            [12]  931 	mov	r0,#__w5500_write_PARM_3
      000276 74r00            [12]  932 	mov	a,#_small_buffer
      000278 F2               [24]  933 	movx	@r0,a
      000279 08               [12]  934 	inc	r0
      00027A E4               [12]  935 	clr	a
      00027B F2               [24]  936 	movx	@r0,a
      00027C 08               [12]  937 	inc	r0
      00027D 74 60            [12]  938 	mov	a,#0x60
      00027F F2               [24]  939 	movx	@r0,a
      000280 78r39            [12]  940 	mov	r0,#__w5500_write_PARM_4
      000282 74 01            [12]  941 	mov	a,#0x01
      000284 F2               [24]  942 	movx	@r0,a
      000285 08               [12]  943 	inc	r0
      000286 E4               [12]  944 	clr	a
      000287 F2               [24]  945 	movx	@r0,a
      000288 90 00 01         [24]  946 	mov	dptr,#0x0001
                                    947 ;	W5500.c:82: }
      00028B 02r05r9C         [24]  948 	ljmp	__w5500_write
                                    949 ;------------------------------------------------------------
                                    950 ;Allocation info for local variables in function '_w5500_set_sourceport'
                                    951 ;------------------------------------------------------------
                                    952 ;	W5500.c:89: void _w5500_set_sourceport(unsigned char socket, unsigned int port) {
                                    953 ;	-----------------------------------------
                                    954 ;	 function _w5500_set_sourceport
                                    955 ;	-----------------------------------------
      00028E                        956 __w5500_set_sourceport:
      00028E AF 82            [24]  957 	mov	r7,dpl
                                    958 ;	W5500.c:90: small_buffer[0] = port >> 8;
      000290 78r24            [12]  959 	mov	r0,#(__w5500_set_sourceport_PARM_2 + 1)
      000292 E2               [24]  960 	movx	a,@r0
      000293 78r00            [12]  961 	mov	r0,#_small_buffer
      000295 F2               [24]  962 	movx	@r0,a
                                    963 ;	W5500.c:91: small_buffer[1] = port & 0xFF;
      000296 78r23            [12]  964 	mov	r0,#__w5500_set_sourceport_PARM_2
      000298 E2               [24]  965 	movx	a,@r0
      000299 FE               [12]  966 	mov	r6,a
      00029A 78r01            [12]  967 	mov	r0,#(_small_buffer + 0x0001)
      00029C F2               [24]  968 	movx	@r0,a
                                    969 ;	W5500.c:92: _w5500_write(SOCKETN_SOURCEPORT, (socket * 4) + 1, small_buffer, 2);
      00029D EF               [12]  970 	mov	a,r7
      00029E 2F               [12]  971 	add	a,r7
      00029F 25 E0            [12]  972 	add	a,acc
      0002A1 78r35            [12]  973 	mov	r0,#__w5500_write_PARM_2
      0002A3 04               [12]  974 	inc	a
      0002A4 F2               [24]  975 	movx	@r0,a
      0002A5 78r36            [12]  976 	mov	r0,#__w5500_write_PARM_3
      0002A7 74r00            [12]  977 	mov	a,#_small_buffer
      0002A9 F2               [24]  978 	movx	@r0,a
      0002AA 08               [12]  979 	inc	r0
      0002AB E4               [12]  980 	clr	a
      0002AC F2               [24]  981 	movx	@r0,a
      0002AD 08               [12]  982 	inc	r0
      0002AE 74 60            [12]  983 	mov	a,#0x60
      0002B0 F2               [24]  984 	movx	@r0,a
      0002B1 78r39            [12]  985 	mov	r0,#__w5500_write_PARM_4
      0002B3 74 02            [12]  986 	mov	a,#0x02
      0002B5 F2               [24]  987 	movx	@r0,a
      0002B6 08               [12]  988 	inc	r0
      0002B7 E4               [12]  989 	clr	a
      0002B8 F2               [24]  990 	movx	@r0,a
      0002B9 90 00 04         [24]  991 	mov	dptr,#0x0004
                                    992 ;	W5500.c:93: }
      0002BC 02r05r9C         [24]  993 	ljmp	__w5500_write
                                    994 ;------------------------------------------------------------
                                    995 ;Allocation info for local variables in function '_w5500_set_remoteport'
                                    996 ;------------------------------------------------------------
                                    997 ;	W5500.c:95: void _w5500_set_remoteport(unsigned char socket, unsigned int port) {
                                    998 ;	-----------------------------------------
                                    999 ;	 function _w5500_set_remoteport
                                   1000 ;	-----------------------------------------
      0002BF                       1001 __w5500_set_remoteport:
      0002BF AF 82            [24] 1002 	mov	r7,dpl
                                   1003 ;	W5500.c:96: small_buffer[0] = port >> 8;
      0002C1 78r26            [12] 1004 	mov	r0,#(__w5500_set_remoteport_PARM_2 + 1)
      0002C3 E2               [24] 1005 	movx	a,@r0
      0002C4 78r00            [12] 1006 	mov	r0,#_small_buffer
      0002C6 F2               [24] 1007 	movx	@r0,a
                                   1008 ;	W5500.c:97: small_buffer[1] = port & 0xFF;
      0002C7 78r25            [12] 1009 	mov	r0,#__w5500_set_remoteport_PARM_2
      0002C9 E2               [24] 1010 	movx	a,@r0
      0002CA FE               [12] 1011 	mov	r6,a
      0002CB 78r01            [12] 1012 	mov	r0,#(_small_buffer + 0x0001)
      0002CD F2               [24] 1013 	movx	@r0,a
                                   1014 ;	W5500.c:98: _w5500_write(SOCKETN_DEST_PORT, (socket * 4) + 1, small_buffer, 2);
      0002CE EF               [12] 1015 	mov	a,r7
      0002CF 2F               [12] 1016 	add	a,r7
      0002D0 25 E0            [12] 1017 	add	a,acc
      0002D2 78r35            [12] 1018 	mov	r0,#__w5500_write_PARM_2
      0002D4 04               [12] 1019 	inc	a
      0002D5 F2               [24] 1020 	movx	@r0,a
      0002D6 78r36            [12] 1021 	mov	r0,#__w5500_write_PARM_3
      0002D8 74r00            [12] 1022 	mov	a,#_small_buffer
      0002DA F2               [24] 1023 	movx	@r0,a
      0002DB 08               [12] 1024 	inc	r0
      0002DC E4               [12] 1025 	clr	a
      0002DD F2               [24] 1026 	movx	@r0,a
      0002DE 08               [12] 1027 	inc	r0
      0002DF 74 60            [12] 1028 	mov	a,#0x60
      0002E1 F2               [24] 1029 	movx	@r0,a
      0002E2 78r39            [12] 1030 	mov	r0,#__w5500_write_PARM_4
      0002E4 74 02            [12] 1031 	mov	a,#0x02
      0002E6 F2               [24] 1032 	movx	@r0,a
      0002E7 08               [12] 1033 	inc	r0
      0002E8 E4               [12] 1034 	clr	a
      0002E9 F2               [24] 1035 	movx	@r0,a
      0002EA 90 00 10         [24] 1036 	mov	dptr,#0x0010
                                   1037 ;	W5500.c:99: }
      0002ED 02r05r9C         [24] 1038 	ljmp	__w5500_write
                                   1039 ;------------------------------------------------------------
                                   1040 ;Allocation info for local variables in function '_w5500_set_destinationip'
                                   1041 ;------------------------------------------------------------
                                   1042 ;	W5500.c:101: void _w5500_set_destinationip(unsigned char socket, unsigned char* ip) {
                                   1043 ;	-----------------------------------------
                                   1044 ;	 function _w5500_set_destinationip
                                   1045 ;	-----------------------------------------
      0002F0                       1046 __w5500_set_destinationip:
                                   1047 ;	W5500.c:102: _w5500_write(SOCKETN_DEST_IP, (socket * 4) + 1, ip, 4);
      0002F0 E5 82            [12] 1048 	mov	a,dpl
      0002F2 25 82            [12] 1049 	add	a,dpl
      0002F4 25 E0            [12] 1050 	add	a,acc
      0002F6 78r35            [12] 1051 	mov	r0,#__w5500_write_PARM_2
      0002F8 04               [12] 1052 	inc	a
      0002F9 F2               [24] 1053 	movx	@r0,a
      0002FA 78r27            [12] 1054 	mov	r0,#__w5500_set_destinationip_PARM_2
      0002FC 79r36            [12] 1055 	mov	r1,#__w5500_write_PARM_3
      0002FE E2               [24] 1056 	movx	a,@r0
      0002FF F3               [24] 1057 	movx	@r1,a
      000300 08               [12] 1058 	inc	r0
      000301 E2               [24] 1059 	movx	a,@r0
      000302 09               [12] 1060 	inc	r1
      000303 F3               [24] 1061 	movx	@r1,a
      000304 08               [12] 1062 	inc	r0
      000305 E2               [24] 1063 	movx	a,@r0
      000306 09               [12] 1064 	inc	r1
      000307 F3               [24] 1065 	movx	@r1,a
      000308 78r39            [12] 1066 	mov	r0,#__w5500_write_PARM_4
      00030A 74 04            [12] 1067 	mov	a,#0x04
      00030C F2               [24] 1068 	movx	@r0,a
      00030D 08               [12] 1069 	inc	r0
      00030E E4               [12] 1070 	clr	a
      00030F F2               [24] 1071 	movx	@r0,a
      000310 90 00 0C         [24] 1072 	mov	dptr,#0x000c
                                   1073 ;	W5500.c:103: }
      000313 02r05r9C         [24] 1074 	ljmp	__w5500_write
                                   1075 ;------------------------------------------------------------
                                   1076 ;Allocation info for local variables in function '_w5500_writeto'
                                   1077 ;------------------------------------------------------------
                                   1078 ;	W5500.c:106: void _w5500_writeto(unsigned char socket, const unsigned char* data, unsigned char length) {
                                   1079 ;	-----------------------------------------
                                   1080 ;	 function _w5500_writeto
                                   1081 ;	-----------------------------------------
      000316                       1082 __w5500_writeto:
                                   1083 ;	W5500.c:108: _w5500_read(0x24, (socket * 4) + 1, small_buffer, 2);
      000316 E5 82            [12] 1084 	mov	a,dpl
      000318 25 82            [12] 1085 	add	a,dpl
      00031A 25 E0            [12] 1086 	add	a,acc
      00031C FF               [12] 1087 	mov	r7,a
      00031D 04               [12] 1088 	inc	a
      00031E FE               [12] 1089 	mov	r6,a
      00031F 78r30            [12] 1090 	mov	r0,#__w5500_read_PARM_3
      000321 74r00            [12] 1091 	mov	a,#_small_buffer
      000323 F2               [24] 1092 	movx	@r0,a
      000324 08               [12] 1093 	inc	r0
      000325 E4               [12] 1094 	clr	a
      000326 F2               [24] 1095 	movx	@r0,a
      000327 08               [12] 1096 	inc	r0
      000328 74 60            [12] 1097 	mov	a,#0x60
      00032A F2               [24] 1098 	movx	@r0,a
      00032B 78r2F            [12] 1099 	mov	r0,#__w5500_read_PARM_2
      00032D EE               [12] 1100 	mov	a,r6
      00032E F2               [24] 1101 	movx	@r0,a
      00032F 78r33            [12] 1102 	mov	r0,#__w5500_read_PARM_4
      000331 74 02            [12] 1103 	mov	a,#0x02
      000333 F2               [24] 1104 	movx	@r0,a
      000334 08               [12] 1105 	inc	r0
      000335 E4               [12] 1106 	clr	a
      000336 F2               [24] 1107 	movx	@r0,a
      000337 90 00 24         [24] 1108 	mov	dptr,#0x0024
      00033A C0 07            [24] 1109 	push	ar7
      00033C C0 06            [24] 1110 	push	ar6
      00033E 12r05r24         [24] 1111 	lcall	__w5500_read
      000341 D0 06            [24] 1112 	pop	ar6
      000343 D0 07            [24] 1113 	pop	ar7
                                   1114 ;	W5500.c:109: easy_math = (small_buffer[0] << 8) | small_buffer[1];
      000345 78r00            [12] 1115 	mov	r0,#_small_buffer
      000347 E2               [24] 1116 	movx	a,@r0
      000348 FC               [12] 1117 	mov	r4,a
      000349 7D 00            [12] 1118 	mov	r5,#0x00
      00034B 78r01            [12] 1119 	mov	r0,#(_small_buffer + 0x0001)
      00034D E2               [24] 1120 	movx	a,@r0
      00034E 7A 00            [12] 1121 	mov	r2,#0x00
      000350 42 05            [12] 1122 	orl	ar5,a
      000352 EA               [12] 1123 	mov	a,r2
      000353 42 04            [12] 1124 	orl	ar4,a
                                   1125 ;	W5500.c:110: _w5500_write(easy_math, (socket * 4) + 2, data, length);
      000355 78r35            [12] 1126 	mov	r0,#__w5500_write_PARM_2
      000357 74 02            [12] 1127 	mov	a,#0x02
      000359 2F               [12] 1128 	add	a,r7
      00035A F2               [24] 1129 	movx	@r0,a
      00035B 78r2D            [12] 1130 	mov	r0,#__w5500_writeto_PARM_3
      00035D 79r39            [12] 1131 	mov	r1,#__w5500_write_PARM_4
      00035F E2               [24] 1132 	movx	a,@r0
      000360 F3               [24] 1133 	movx	@r1,a
      000361 09               [12] 1134 	inc	r1
      000362 E4               [12] 1135 	clr	a
      000363 F3               [24] 1136 	movx	@r1,a
      000364 78r2A            [12] 1137 	mov	r0,#__w5500_writeto_PARM_2
      000366 79r36            [12] 1138 	mov	r1,#__w5500_write_PARM_3
      000368 E2               [24] 1139 	movx	a,@r0
      000369 F3               [24] 1140 	movx	@r1,a
      00036A 08               [12] 1141 	inc	r0
      00036B E2               [24] 1142 	movx	a,@r0
      00036C 09               [12] 1143 	inc	r1
      00036D F3               [24] 1144 	movx	@r1,a
      00036E 08               [12] 1145 	inc	r0
      00036F E2               [24] 1146 	movx	a,@r0
      000370 09               [12] 1147 	inc	r1
      000371 F3               [24] 1148 	movx	@r1,a
      000372 8D 82            [24] 1149 	mov	dpl,r5
      000374 8C 83            [24] 1150 	mov	dph,r4
      000376 C0 06            [24] 1151 	push	ar6
      000378 C0 05            [24] 1152 	push	ar5
      00037A C0 04            [24] 1153 	push	ar4
      00037C 12r05r9C         [24] 1154 	lcall	__w5500_write
      00037F D0 04            [24] 1155 	pop	ar4
      000381 D0 05            [24] 1156 	pop	ar5
      000383 D0 06            [24] 1157 	pop	ar6
                                   1158 ;	W5500.c:111: easy_math += length;
      000385 78r2D            [12] 1159 	mov	r0,#__w5500_writeto_PARM_3
      000387 E2               [24] 1160 	movx	a,@r0
      000388 7F 00            [12] 1161 	mov	r7,#0x00
      00038A 2D               [12] 1162 	add	a,r5
      00038B FB               [12] 1163 	mov	r3,a
      00038C EF               [12] 1164 	mov	a,r7
      00038D 3C               [12] 1165 	addc	a,r4
                                   1166 ;	W5500.c:112: small_buffer[0] = easy_math >> 8;
      00038E FD               [12] 1167 	mov	r5,a
      00038F 78r00            [12] 1168 	mov	r0,#_small_buffer
      000391 F2               [24] 1169 	movx	@r0,a
                                   1170 ;	W5500.c:113: small_buffer[1] = easy_math & 0xFF;
      000392 78r01            [12] 1171 	mov	r0,#(_small_buffer + 0x0001)
      000394 EB               [12] 1172 	mov	a,r3
      000395 F2               [24] 1173 	movx	@r0,a
                                   1174 ;	W5500.c:114: _w5500_write(0x24, (socket * 4) + 1, small_buffer, 2);
      000396 78r36            [12] 1175 	mov	r0,#__w5500_write_PARM_3
      000398 74r00            [12] 1176 	mov	a,#_small_buffer
      00039A F2               [24] 1177 	movx	@r0,a
      00039B 08               [12] 1178 	inc	r0
      00039C E4               [12] 1179 	clr	a
      00039D F2               [24] 1180 	movx	@r0,a
      00039E 08               [12] 1181 	inc	r0
      00039F 74 60            [12] 1182 	mov	a,#0x60
      0003A1 F2               [24] 1183 	movx	@r0,a
      0003A2 78r35            [12] 1184 	mov	r0,#__w5500_write_PARM_2
      0003A4 EE               [12] 1185 	mov	a,r6
      0003A5 F2               [24] 1186 	movx	@r0,a
      0003A6 78r39            [12] 1187 	mov	r0,#__w5500_write_PARM_4
      0003A8 74 02            [12] 1188 	mov	a,#0x02
      0003AA F2               [24] 1189 	movx	@r0,a
      0003AB 08               [12] 1190 	inc	r0
      0003AC E4               [12] 1191 	clr	a
      0003AD F2               [24] 1192 	movx	@r0,a
      0003AE 90 00 24         [24] 1193 	mov	dptr,#0x0024
                                   1194 ;	W5500.c:115: }
      0003B1 02r05r9C         [24] 1195 	ljmp	__w5500_write
                                   1196 ;------------------------------------------------------------
                                   1197 ;Allocation info for local variables in function '_w5500_bytesinbuffer'
                                   1198 ;------------------------------------------------------------
                                   1199 ;	W5500.c:117: unsigned int _w5500_bytesinbuffer(unsigned char socket) {
                                   1200 ;	-----------------------------------------
                                   1201 ;	 function _w5500_bytesinbuffer
                                   1202 ;	-----------------------------------------
      0003B4                       1203 __w5500_bytesinbuffer:
                                   1204 ;	W5500.c:118: _w5500_read(0x26, (socket * 4) + 1, small_buffer, 2);
      0003B4 E5 82            [12] 1205 	mov	a,dpl
      0003B6 25 82            [12] 1206 	add	a,dpl
      0003B8 25 E0            [12] 1207 	add	a,acc
      0003BA 78r2F            [12] 1208 	mov	r0,#__w5500_read_PARM_2
      0003BC 04               [12] 1209 	inc	a
      0003BD F2               [24] 1210 	movx	@r0,a
      0003BE 78r30            [12] 1211 	mov	r0,#__w5500_read_PARM_3
      0003C0 74r00            [12] 1212 	mov	a,#_small_buffer
      0003C2 F2               [24] 1213 	movx	@r0,a
      0003C3 08               [12] 1214 	inc	r0
      0003C4 E4               [12] 1215 	clr	a
      0003C5 F2               [24] 1216 	movx	@r0,a
      0003C6 08               [12] 1217 	inc	r0
      0003C7 74 60            [12] 1218 	mov	a,#0x60
      0003C9 F2               [24] 1219 	movx	@r0,a
      0003CA 78r33            [12] 1220 	mov	r0,#__w5500_read_PARM_4
      0003CC 74 02            [12] 1221 	mov	a,#0x02
      0003CE F2               [24] 1222 	movx	@r0,a
      0003CF 08               [12] 1223 	inc	r0
      0003D0 E4               [12] 1224 	clr	a
      0003D1 F2               [24] 1225 	movx	@r0,a
      0003D2 90 00 26         [24] 1226 	mov	dptr,#0x0026
      0003D5 12r05r24         [24] 1227 	lcall	__w5500_read
                                   1228 ;	W5500.c:119: return (small_buffer[0] << 8) | small_buffer[1];
      0003D8 78r00            [12] 1229 	mov	r0,#_small_buffer
      0003DA E2               [24] 1230 	movx	a,@r0
      0003DB FE               [12] 1231 	mov	r6,a
      0003DC 7F 00            [12] 1232 	mov	r7,#0x00
      0003DE 78r01            [12] 1233 	mov	r0,#(_small_buffer + 0x0001)
      0003E0 E2               [24] 1234 	movx	a,@r0
      0003E1 7C 00            [12] 1235 	mov	r4,#0x00
      0003E3 4F               [12] 1236 	orl	a,r7
      0003E4 F5 82            [12] 1237 	mov	dpl,a
      0003E6 EC               [12] 1238 	mov	a,r4
      0003E7 4E               [12] 1239 	orl	a,r6
      0003E8 F5 83            [12] 1240 	mov	dph,a
                                   1241 ;	W5500.c:120: }
      0003EA 22               [24] 1242 	ret
                                   1243 ;------------------------------------------------------------
                                   1244 ;Allocation info for local variables in function '_w5500_readchar'
                                   1245 ;------------------------------------------------------------
                                   1246 ;	W5500.c:189: unsigned char _w5500_readchar(unsigned char socket) {
                                   1247 ;	-----------------------------------------
                                   1248 ;	 function _w5500_readchar
                                   1249 ;	-----------------------------------------
      0003EB                       1250 __w5500_readchar:
      0003EB AF 82            [24] 1251 	mov	r7,dpl
                                   1252 ;	W5500.c:190: unsigned char val = 0;
      0003ED 78r2E            [12] 1253 	mov	r0,#__w5500_readchar_val_65536_61
      0003EF E4               [12] 1254 	clr	a
      0003F0 F2               [24] 1255 	movx	@r0,a
                                   1256 ;	W5500.c:192: _w5500_read(0x28, (socket * 4) + 1, small_buffer, 2);
      0003F1 EF               [12] 1257 	mov	a,r7
      0003F2 2F               [12] 1258 	add	a,r7
      0003F3 25 E0            [12] 1259 	add	a,acc
      0003F5 FF               [12] 1260 	mov	r7,a
      0003F6 04               [12] 1261 	inc	a
      0003F7 FE               [12] 1262 	mov	r6,a
      0003F8 78r30            [12] 1263 	mov	r0,#__w5500_read_PARM_3
      0003FA 74r00            [12] 1264 	mov	a,#_small_buffer
      0003FC F2               [24] 1265 	movx	@r0,a
      0003FD 08               [12] 1266 	inc	r0
      0003FE E4               [12] 1267 	clr	a
      0003FF F2               [24] 1268 	movx	@r0,a
      000400 08               [12] 1269 	inc	r0
      000401 74 60            [12] 1270 	mov	a,#0x60
      000403 F2               [24] 1271 	movx	@r0,a
      000404 78r2F            [12] 1272 	mov	r0,#__w5500_read_PARM_2
      000406 EE               [12] 1273 	mov	a,r6
      000407 F2               [24] 1274 	movx	@r0,a
      000408 78r33            [12] 1275 	mov	r0,#__w5500_read_PARM_4
      00040A 74 02            [12] 1276 	mov	a,#0x02
      00040C F2               [24] 1277 	movx	@r0,a
      00040D 08               [12] 1278 	inc	r0
      00040E E4               [12] 1279 	clr	a
      00040F F2               [24] 1280 	movx	@r0,a
      000410 90 00 28         [24] 1281 	mov	dptr,#0x0028
      000413 C0 07            [24] 1282 	push	ar7
      000415 C0 06            [24] 1283 	push	ar6
      000417 12r05r24         [24] 1284 	lcall	__w5500_read
      00041A D0 06            [24] 1285 	pop	ar6
      00041C D0 07            [24] 1286 	pop	ar7
                                   1287 ;	W5500.c:193: starting_addr = (small_buffer[0] << 8) | small_buffer[1];
      00041E 78r00            [12] 1288 	mov	r0,#_small_buffer
      000420 E2               [24] 1289 	movx	a,@r0
      000421 FC               [12] 1290 	mov	r4,a
      000422 7D 00            [12] 1291 	mov	r5,#0x00
      000424 78r01            [12] 1292 	mov	r0,#(_small_buffer + 0x0001)
      000426 E2               [24] 1293 	movx	a,@r0
      000427 7A 00            [12] 1294 	mov	r2,#0x00
      000429 42 05            [12] 1295 	orl	ar5,a
      00042B EA               [12] 1296 	mov	a,r2
      00042C 42 04            [12] 1297 	orl	ar4,a
                                   1298 ;	W5500.c:194: _w5500_read(starting_addr, (socket * 4) + 3, &val, 1);
      00042E 78r2F            [12] 1299 	mov	r0,#__w5500_read_PARM_2
      000430 74 03            [12] 1300 	mov	a,#0x03
      000432 2F               [12] 1301 	add	a,r7
      000433 F2               [24] 1302 	movx	@r0,a
      000434 78r30            [12] 1303 	mov	r0,#__w5500_read_PARM_3
      000436 74r2E            [12] 1304 	mov	a,#__w5500_readchar_val_65536_61
      000438 F2               [24] 1305 	movx	@r0,a
      000439 08               [12] 1306 	inc	r0
      00043A E4               [12] 1307 	clr	a
      00043B F2               [24] 1308 	movx	@r0,a
      00043C 08               [12] 1309 	inc	r0
      00043D 74 60            [12] 1310 	mov	a,#0x60
      00043F F2               [24] 1311 	movx	@r0,a
      000440 78r33            [12] 1312 	mov	r0,#__w5500_read_PARM_4
      000442 74 01            [12] 1313 	mov	a,#0x01
      000444 F2               [24] 1314 	movx	@r0,a
      000445 08               [12] 1315 	inc	r0
      000446 E4               [12] 1316 	clr	a
      000447 F2               [24] 1317 	movx	@r0,a
      000448 8D 82            [24] 1318 	mov	dpl,r5
      00044A 8C 83            [24] 1319 	mov	dph,r4
      00044C C0 06            [24] 1320 	push	ar6
      00044E C0 05            [24] 1321 	push	ar5
      000450 C0 04            [24] 1322 	push	ar4
      000452 12r05r24         [24] 1323 	lcall	__w5500_read
      000455 D0 04            [24] 1324 	pop	ar4
      000457 D0 05            [24] 1325 	pop	ar5
      000459 D0 06            [24] 1326 	pop	ar6
                                   1327 ;	W5500.c:195: starting_addr++;
      00045B 0D               [12] 1328 	inc	r5
      00045C BD 00 01         [24] 1329 	cjne	r5,#0x00,00103$
      00045F 0C               [12] 1330 	inc	r4
      000460                       1331 00103$:
                                   1332 ;	W5500.c:196: small_buffer[0] = starting_addr >> 8;
      000460 8C 07            [24] 1333 	mov	ar7,r4
      000462 78r00            [12] 1334 	mov	r0,#_small_buffer
      000464 EF               [12] 1335 	mov	a,r7
      000465 F2               [24] 1336 	movx	@r0,a
                                   1337 ;	W5500.c:197: small_buffer[1] = starting_addr & 0xFF;
      000466 78r01            [12] 1338 	mov	r0,#(_small_buffer + 0x0001)
      000468 ED               [12] 1339 	mov	a,r5
      000469 F2               [24] 1340 	movx	@r0,a
                                   1341 ;	W5500.c:198: _w5500_write(0x28, (socket  * 4) + 1, small_buffer, 2);
      00046A 78r36            [12] 1342 	mov	r0,#__w5500_write_PARM_3
      00046C 74r00            [12] 1343 	mov	a,#_small_buffer
      00046E F2               [24] 1344 	movx	@r0,a
      00046F 08               [12] 1345 	inc	r0
      000470 E4               [12] 1346 	clr	a
      000471 F2               [24] 1347 	movx	@r0,a
      000472 08               [12] 1348 	inc	r0
      000473 74 60            [12] 1349 	mov	a,#0x60
      000475 F2               [24] 1350 	movx	@r0,a
      000476 78r35            [12] 1351 	mov	r0,#__w5500_write_PARM_2
      000478 EE               [12] 1352 	mov	a,r6
      000479 F2               [24] 1353 	movx	@r0,a
      00047A 78r39            [12] 1354 	mov	r0,#__w5500_write_PARM_4
      00047C 74 02            [12] 1355 	mov	a,#0x02
      00047E F2               [24] 1356 	movx	@r0,a
      00047F 08               [12] 1357 	inc	r0
      000480 E4               [12] 1358 	clr	a
      000481 F2               [24] 1359 	movx	@r0,a
      000482 90 00 28         [24] 1360 	mov	dptr,#0x0028
      000485 C0 06            [24] 1361 	push	ar6
      000487 12r05r9C         [24] 1362 	lcall	__w5500_write
      00048A D0 06            [24] 1363 	pop	ar6
                                   1364 ;	W5500.c:199: small_buffer[0] = 0x40;
      00048C 78r00            [12] 1365 	mov	r0,#_small_buffer
      00048E 74 40            [12] 1366 	mov	a,#0x40
      000490 F2               [24] 1367 	movx	@r0,a
                                   1368 ;	W5500.c:200: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      000491 78r36            [12] 1369 	mov	r0,#__w5500_write_PARM_3
      000493 74r00            [12] 1370 	mov	a,#_small_buffer
      000495 F2               [24] 1371 	movx	@r0,a
      000496 08               [12] 1372 	inc	r0
      000497 E4               [12] 1373 	clr	a
      000498 F2               [24] 1374 	movx	@r0,a
      000499 08               [12] 1375 	inc	r0
      00049A 74 60            [12] 1376 	mov	a,#0x60
      00049C F2               [24] 1377 	movx	@r0,a
      00049D 78r35            [12] 1378 	mov	r0,#__w5500_write_PARM_2
      00049F EE               [12] 1379 	mov	a,r6
      0004A0 F2               [24] 1380 	movx	@r0,a
      0004A1 78r39            [12] 1381 	mov	r0,#__w5500_write_PARM_4
      0004A3 74 01            [12] 1382 	mov	a,#0x01
      0004A5 F2               [24] 1383 	movx	@r0,a
      0004A6 08               [12] 1384 	inc	r0
      0004A7 E4               [12] 1385 	clr	a
      0004A8 F2               [24] 1386 	movx	@r0,a
      0004A9 90 00 01         [24] 1387 	mov	dptr,#0x0001
      0004AC 12r05r9C         [24] 1388 	lcall	__w5500_write
                                   1389 ;	W5500.c:201: return val;
      0004AF 78r2E            [12] 1390 	mov	r0,#__w5500_readchar_val_65536_61
      0004B1 E2               [24] 1391 	movx	a,@r0
      0004B2 F5 82            [12] 1392 	mov	dpl,a
                                   1393 ;	W5500.c:202: }
      0004B4 22               [24] 1394 	ret
                                   1395 ;------------------------------------------------------------
                                   1396 ;Allocation info for local variables in function '_w5500_send'
                                   1397 ;------------------------------------------------------------
                                   1398 ;	W5500.c:204: void _w5500_send(unsigned char socket) {
                                   1399 ;	-----------------------------------------
                                   1400 ;	 function _w5500_send
                                   1401 ;	-----------------------------------------
      0004B5                       1402 __w5500_send:
      0004B5 AF 82            [24] 1403 	mov	r7,dpl
                                   1404 ;	W5500.c:205: small_buffer[0] = 0x20;
      0004B7 78r00            [12] 1405 	mov	r0,#_small_buffer
      0004B9 74 20            [12] 1406 	mov	a,#0x20
      0004BB F2               [24] 1407 	movx	@r0,a
                                   1408 ;	W5500.c:206: _w5500_write(SOCKETN_COMMAND, (socket * 4) + 1, small_buffer, 1);
      0004BC EF               [12] 1409 	mov	a,r7
      0004BD 2F               [12] 1410 	add	a,r7
      0004BE 25 E0            [12] 1411 	add	a,acc
      0004C0 78r35            [12] 1412 	mov	r0,#__w5500_write_PARM_2
      0004C2 04               [12] 1413 	inc	a
      0004C3 F2               [24] 1414 	movx	@r0,a
      0004C4 78r36            [12] 1415 	mov	r0,#__w5500_write_PARM_3
      0004C6 74r00            [12] 1416 	mov	a,#_small_buffer
      0004C8 F2               [24] 1417 	movx	@r0,a
      0004C9 08               [12] 1418 	inc	r0
      0004CA E4               [12] 1419 	clr	a
      0004CB F2               [24] 1420 	movx	@r0,a
      0004CC 08               [12] 1421 	inc	r0
      0004CD 74 60            [12] 1422 	mov	a,#0x60
      0004CF F2               [24] 1423 	movx	@r0,a
      0004D0 78r39            [12] 1424 	mov	r0,#__w5500_write_PARM_4
      0004D2 74 01            [12] 1425 	mov	a,#0x01
      0004D4 F2               [24] 1426 	movx	@r0,a
      0004D5 08               [12] 1427 	inc	r0
      0004D6 E4               [12] 1428 	clr	a
      0004D7 F2               [24] 1429 	movx	@r0,a
      0004D8 90 00 01         [24] 1430 	mov	dptr,#0x0001
                                   1431 ;	W5500.c:207: }
      0004DB 02r05r9C         [24] 1432 	ljmp	__w5500_write
                                   1433 ;------------------------------------------------------------
                                   1434 ;Allocation info for local variables in function '_w5500_get_version'
                                   1435 ;------------------------------------------------------------
                                   1436 ;	W5500.c:209: unsigned char _w5500_get_version() {
                                   1437 ;	-----------------------------------------
                                   1438 ;	 function _w5500_get_version
                                   1439 ;	-----------------------------------------
      0004DE                       1440 __w5500_get_version:
                                   1441 ;	W5500.c:210: _w5500_read(0x0039, 0x00, small_buffer, 1);
      0004DE 78r30            [12] 1442 	mov	r0,#__w5500_read_PARM_3
      0004E0 74r00            [12] 1443 	mov	a,#_small_buffer
      0004E2 F2               [24] 1444 	movx	@r0,a
      0004E3 08               [12] 1445 	inc	r0
      0004E4 E4               [12] 1446 	clr	a
      0004E5 F2               [24] 1447 	movx	@r0,a
      0004E6 08               [12] 1448 	inc	r0
      0004E7 74 60            [12] 1449 	mov	a,#0x60
      0004E9 F2               [24] 1450 	movx	@r0,a
      0004EA 78r2F            [12] 1451 	mov	r0,#__w5500_read_PARM_2
      0004EC E4               [12] 1452 	clr	a
      0004ED F2               [24] 1453 	movx	@r0,a
      0004EE 78r33            [12] 1454 	mov	r0,#__w5500_read_PARM_4
      0004F0 04               [12] 1455 	inc	a
      0004F1 F2               [24] 1456 	movx	@r0,a
      0004F2 08               [12] 1457 	inc	r0
      0004F3 E4               [12] 1458 	clr	a
      0004F4 F2               [24] 1459 	movx	@r0,a
      0004F5 90 00 39         [24] 1460 	mov	dptr,#0x0039
      0004F8 12r05r24         [24] 1461 	lcall	__w5500_read
                                   1462 ;	W5500.c:211: return small_buffer[0];
      0004FB 78r00            [12] 1463 	mov	r0,#_small_buffer
      0004FD E2               [24] 1464 	movx	a,@r0
      0004FE F5 82            [12] 1465 	mov	dpl,a
                                   1466 ;	W5500.c:212: }
      000500 22               [24] 1467 	ret
                                   1468 ;------------------------------------------------------------
                                   1469 ;Allocation info for local variables in function '_w5500_get_phyconfig'
                                   1470 ;------------------------------------------------------------
                                   1471 ;	W5500.c:214: unsigned char _w5500_get_phyconfig() {
                                   1472 ;	-----------------------------------------
                                   1473 ;	 function _w5500_get_phyconfig
                                   1474 ;	-----------------------------------------
      000501                       1475 __w5500_get_phyconfig:
                                   1476 ;	W5500.c:215: _w5500_read(0x002E, 0x00, small_buffer, 1);
      000501 78r30            [12] 1477 	mov	r0,#__w5500_read_PARM_3
      000503 74r00            [12] 1478 	mov	a,#_small_buffer
      000505 F2               [24] 1479 	movx	@r0,a
      000506 08               [12] 1480 	inc	r0
      000507 E4               [12] 1481 	clr	a
      000508 F2               [24] 1482 	movx	@r0,a
      000509 08               [12] 1483 	inc	r0
      00050A 74 60            [12] 1484 	mov	a,#0x60
      00050C F2               [24] 1485 	movx	@r0,a
      00050D 78r2F            [12] 1486 	mov	r0,#__w5500_read_PARM_2
      00050F E4               [12] 1487 	clr	a
      000510 F2               [24] 1488 	movx	@r0,a
      000511 78r33            [12] 1489 	mov	r0,#__w5500_read_PARM_4
      000513 04               [12] 1490 	inc	a
      000514 F2               [24] 1491 	movx	@r0,a
      000515 08               [12] 1492 	inc	r0
      000516 E4               [12] 1493 	clr	a
      000517 F2               [24] 1494 	movx	@r0,a
      000518 90 00 2E         [24] 1495 	mov	dptr,#0x002e
      00051B 12r05r24         [24] 1496 	lcall	__w5500_read
                                   1497 ;	W5500.c:216: return small_buffer[0];
      00051E 78r00            [12] 1498 	mov	r0,#_small_buffer
      000520 E2               [24] 1499 	movx	a,@r0
      000521 F5 82            [12] 1500 	mov	dpl,a
                                   1501 ;	W5500.c:217: }
      000523 22               [24] 1502 	ret
                                   1503 ;------------------------------------------------------------
                                   1504 ;Allocation info for local variables in function '_w5500_read'
                                   1505 ;------------------------------------------------------------
                                   1506 ;sloc0                     Allocated with name '__w5500_read_sloc0_1_0'
                                   1507 ;------------------------------------------------------------
                                   1508 ;	W5500.c:219: void _w5500_read(unsigned int oa, unsigned char bsb, unsigned char* data, unsigned int length) {
                                   1509 ;	-----------------------------------------
                                   1510 ;	 function _w5500_read
                                   1511 ;	-----------------------------------------
      000524                       1512 __w5500_read:
      000524 AE 82            [24] 1513 	mov	r6,dpl
      000526 AF 83            [24] 1514 	mov	r7,dph
                                   1515 ;	W5500.c:220: unsigned char oa_high = oa >> 8;
      000528 8F 05            [24] 1516 	mov	ar5,r7
                                   1517 ;	W5500.c:221: unsigned char oa_low = oa & 0xFF;
                                   1518 ;	W5500.c:222: unsigned char true_bsb = ((bsb << 3) | (0 << 2)); // | om, this was removed because om always == 0 in my use cases
      00052A 78r2F            [12] 1519 	mov	r0,#__w5500_read_PARM_2
      00052C E2               [24] 1520 	movx	a,@r0
      00052D C4               [12] 1521 	swap	a
      00052E 03               [12] 1522 	rr	a
      00052F 54 F8            [12] 1523 	anl	a,#0xf8
      000531 FF               [12] 1524 	mov	r7,a
                                   1525 ;	W5500.c:224: _spigeneric_frame_start();
      000532 C0 07            [24] 1526 	push	ar7
      000534 C0 06            [24] 1527 	push	ar6
      000536 C0 05            [24] 1528 	push	ar5
      000538 12r00r00         [24] 1529 	lcall	__spigeneric_frame_start
      00053B D0 05            [24] 1530 	pop	ar5
                                   1531 ;	W5500.c:226: _spigeneric_spit_byte(oa_high);
      00053D 8D 82            [24] 1532 	mov	dpl,r5
      00053F 12r00r00         [24] 1533 	lcall	__spigeneric_spit_byte
      000542 D0 06            [24] 1534 	pop	ar6
                                   1535 ;	W5500.c:227: _spigeneric_spit_byte(oa_low);
      000544 8E 82            [24] 1536 	mov	dpl,r6
      000546 12r00r00         [24] 1537 	lcall	__spigeneric_spit_byte
      000549 D0 07            [24] 1538 	pop	ar7
                                   1539 ;	W5500.c:228: _spigeneric_spit_byte(true_bsb);
      00054B 8F 82            [24] 1540 	mov	dpl,r7
      00054D 12r00r00         [24] 1541 	lcall	__spigeneric_spit_byte
                                   1542 ;	W5500.c:229: while (length--)    *(data++) = _spigeneric_spit_byte(0x00);
      000550 78r30            [12] 1543 	mov	r0,#__w5500_read_PARM_3
      000552 E2               [24] 1544 	movx	a,@r0
      000553 FD               [12] 1545 	mov	r5,a
      000554 08               [12] 1546 	inc	r0
      000555 E2               [24] 1547 	movx	a,@r0
      000556 FE               [12] 1548 	mov	r6,a
      000557 08               [12] 1549 	inc	r0
      000558 E2               [24] 1550 	movx	a,@r0
      000559 FF               [12] 1551 	mov	r7,a
      00055A 78r33            [12] 1552 	mov	r0,#__w5500_read_PARM_4
      00055C E2               [24] 1553 	movx	a,@r0
      00055D F5*00            [12] 1554 	mov	__w5500_read_sloc0_1_0,a
      00055F 08               [12] 1555 	inc	r0
      000560 E2               [24] 1556 	movx	a,@r0
      000561 F5*01            [12] 1557 	mov	(__w5500_read_sloc0_1_0 + 1),a
      000563                       1558 00101$:
      000563 AA*00            [24] 1559 	mov	r2,__w5500_read_sloc0_1_0
      000565 AC*01            [24] 1560 	mov	r4,(__w5500_read_sloc0_1_0 + 1)
      000567 15*00            [12] 1561 	dec	__w5500_read_sloc0_1_0
      000569 74 FF            [12] 1562 	mov	a,#0xff
      00056B B5*00 02         [24] 1563 	cjne	a,__w5500_read_sloc0_1_0,00115$
      00056E 15*01            [12] 1564 	dec	(__w5500_read_sloc0_1_0 + 1)
      000570                       1565 00115$:
      000570 EA               [12] 1566 	mov	a,r2
      000571 4C               [12] 1567 	orl	a,r4
      000572 60 25            [24] 1568 	jz	00103$
      000574 75 82 00         [24] 1569 	mov	dpl,#0x00
      000577 C0 07            [24] 1570 	push	ar7
      000579 C0 06            [24] 1571 	push	ar6
      00057B C0 05            [24] 1572 	push	ar5
      00057D 12r00r00         [24] 1573 	lcall	__spigeneric_spit_byte
      000580 AC 82            [24] 1574 	mov	r4,dpl
      000582 D0 05            [24] 1575 	pop	ar5
      000584 D0 06            [24] 1576 	pop	ar6
      000586 D0 07            [24] 1577 	pop	ar7
      000588 8D 82            [24] 1578 	mov	dpl,r5
      00058A 8E 83            [24] 1579 	mov	dph,r6
      00058C 8F F0            [24] 1580 	mov	b,r7
      00058E EC               [12] 1581 	mov	a,r4
      00058F 12r00r00         [24] 1582 	lcall	__gptrput
      000592 A3               [24] 1583 	inc	dptr
      000593 AD 82            [24] 1584 	mov	r5,dpl
      000595 AE 83            [24] 1585 	mov	r6,dph
      000597 80 CA            [24] 1586 	sjmp	00101$
      000599                       1587 00103$:
                                   1588 ;	W5500.c:231: _spigeneric_frame_end();
                                   1589 ;	W5500.c:232: }
      000599 02r00r00         [24] 1590 	ljmp	__spigeneric_frame_end
                                   1591 ;------------------------------------------------------------
                                   1592 ;Allocation info for local variables in function '_w5500_write'
                                   1593 ;------------------------------------------------------------
                                   1594 ;sloc0                     Allocated with name '__w5500_write_sloc0_1_0'
                                   1595 ;------------------------------------------------------------
                                   1596 ;	W5500.c:234: void _w5500_write(unsigned int oa, unsigned char bsb, const unsigned char* data, unsigned int length) {
                                   1597 ;	-----------------------------------------
                                   1598 ;	 function _w5500_write
                                   1599 ;	-----------------------------------------
      00059C                       1600 __w5500_write:
      00059C AE 82            [24] 1601 	mov	r6,dpl
      00059E AF 83            [24] 1602 	mov	r7,dph
                                   1603 ;	W5500.c:235: unsigned char oa_high = oa >> 8;
      0005A0 8F 05            [24] 1604 	mov	ar5,r7
                                   1605 ;	W5500.c:236: unsigned char oa_low = oa & 0xFF;
                                   1606 ;	W5500.c:237: unsigned char true_bsb = ((bsb << 3) | (1 << 2)); // | om, this was removed because om always == 0 in my use cases
      0005A2 78r35            [12] 1607 	mov	r0,#__w5500_write_PARM_2
      0005A4 E2               [24] 1608 	movx	a,@r0
      0005A5 C4               [12] 1609 	swap	a
      0005A6 03               [12] 1610 	rr	a
      0005A7 54 F8            [12] 1611 	anl	a,#0xf8
      0005A9 FF               [12] 1612 	mov	r7,a
      0005AA 43 07 04         [24] 1613 	orl	ar7,#0x04
                                   1614 ;	W5500.c:239: _spigeneric_frame_start();
      0005AD C0 07            [24] 1615 	push	ar7
      0005AF C0 06            [24] 1616 	push	ar6
      0005B1 C0 05            [24] 1617 	push	ar5
      0005B3 12r00r00         [24] 1618 	lcall	__spigeneric_frame_start
      0005B6 D0 05            [24] 1619 	pop	ar5
                                   1620 ;	W5500.c:241: _spigeneric_spit_byte(oa_high);
      0005B8 8D 82            [24] 1621 	mov	dpl,r5
      0005BA 12r00r00         [24] 1622 	lcall	__spigeneric_spit_byte
      0005BD D0 06            [24] 1623 	pop	ar6
                                   1624 ;	W5500.c:242: _spigeneric_spit_byte(oa_low);
      0005BF 8E 82            [24] 1625 	mov	dpl,r6
      0005C1 12r00r00         [24] 1626 	lcall	__spigeneric_spit_byte
      0005C4 D0 07            [24] 1627 	pop	ar7
                                   1628 ;	W5500.c:243: _spigeneric_spit_byte(true_bsb);
      0005C6 8F 82            [24] 1629 	mov	dpl,r7
      0005C8 12r00r00         [24] 1630 	lcall	__spigeneric_spit_byte
                                   1631 ;	W5500.c:244: while (length--) _spigeneric_spit_byte(*(data++));
      0005CB 78r36            [12] 1632 	mov	r0,#__w5500_write_PARM_3
      0005CD E2               [24] 1633 	movx	a,@r0
      0005CE FD               [12] 1634 	mov	r5,a
      0005CF 08               [12] 1635 	inc	r0
      0005D0 E2               [24] 1636 	movx	a,@r0
      0005D1 FE               [12] 1637 	mov	r6,a
      0005D2 08               [12] 1638 	inc	r0
      0005D3 E2               [24] 1639 	movx	a,@r0
      0005D4 FF               [12] 1640 	mov	r7,a
      0005D5 78r39            [12] 1641 	mov	r0,#__w5500_write_PARM_4
      0005D7 E2               [24] 1642 	movx	a,@r0
      0005D8 F5*02            [12] 1643 	mov	__w5500_write_sloc0_1_0,a
      0005DA 08               [12] 1644 	inc	r0
      0005DB E2               [24] 1645 	movx	a,@r0
      0005DC F5*03            [12] 1646 	mov	(__w5500_write_sloc0_1_0 + 1),a
      0005DE                       1647 00101$:
      0005DE AA*02            [24] 1648 	mov	r2,__w5500_write_sloc0_1_0
      0005E0 AC*03            [24] 1649 	mov	r4,(__w5500_write_sloc0_1_0 + 1)
      0005E2 15*02            [12] 1650 	dec	__w5500_write_sloc0_1_0
      0005E4 74 FF            [12] 1651 	mov	a,#0xff
      0005E6 B5*02 02         [24] 1652 	cjne	a,__w5500_write_sloc0_1_0,00115$
      0005E9 15*03            [12] 1653 	dec	(__w5500_write_sloc0_1_0 + 1)
      0005EB                       1654 00115$:
      0005EB EA               [12] 1655 	mov	a,r2
      0005EC 4C               [12] 1656 	orl	a,r4
      0005ED 60 22            [24] 1657 	jz	00103$
      0005EF 8D 82            [24] 1658 	mov	dpl,r5
      0005F1 8E 83            [24] 1659 	mov	dph,r6
      0005F3 8F F0            [24] 1660 	mov	b,r7
      0005F5 12r00r00         [24] 1661 	lcall	__gptrget
      0005F8 FC               [12] 1662 	mov	r4,a
      0005F9 A3               [24] 1663 	inc	dptr
      0005FA AD 82            [24] 1664 	mov	r5,dpl
      0005FC AE 83            [24] 1665 	mov	r6,dph
      0005FE 8C 82            [24] 1666 	mov	dpl,r4
      000600 C0 07            [24] 1667 	push	ar7
      000602 C0 06            [24] 1668 	push	ar6
      000604 C0 05            [24] 1669 	push	ar5
      000606 12r00r00         [24] 1670 	lcall	__spigeneric_spit_byte
      000609 D0 05            [24] 1671 	pop	ar5
      00060B D0 06            [24] 1672 	pop	ar6
      00060D D0 07            [24] 1673 	pop	ar7
      00060F 80 CD            [24] 1674 	sjmp	00101$
      000611                       1675 00103$:
                                   1676 ;	W5500.c:246: _spigeneric_frame_end();
                                   1677 ;	W5500.c:247: }
      000611 02r00r00         [24] 1678 	ljmp	__spigeneric_frame_end
                                   1679 	.area CSEG    (CODE)
                                   1680 	.area CONST   (CODE)
                                   1681 	.area XINIT   (CODE)
                                   1682 	.area CABS    (ABS,CODE)
